# CircleCI 2.1 configuration file
#
# Check https://circleci.com/docs/2.0 for more details
#
# This is mainly taken from
# https://vsupalov.com/build-docker-image-with-circle-ci-2-push-to-google-container-registry/
# and adapted to our needs, especially with enhancements from
# https://circleci.com/blog/using-circleci-workflows-to-replicate-docker-hub-automated-builds/
# Thanks for the awesome preparation.
version: 2.1

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: node-red
    docker:
      - image: circleci/buildpack-deps:disco

workflows:
  build_and_deploy:
    jobs:
      - build:
          context: Docker publishing as bludoc
          filters:
            branches:
              only:
                - latest
                - 1.0.3
                - twitter
      - test_and_deploy:
          context: Docker publishing as bludoc
          requires:
            - build

jobs:
  build:
    executor: docker-publisher
    working_directory: ~/repo
    steps:
      - checkout

      # This builds the image. Taken from
      # https://circleci.com/docs/2.0/building-docker-images/#overview
      - setup_remote_docker

      # Build image.
      - run:
          name: Build image
          command: |
            docker run --rm --privileged multiarch/qemu-user-static:register --reset
            docker build -f latest/Dockerfile -t $DOCKER_USER/$IMAGE_NAME:$CIRCLE_BRANCH .

      # Save the image.
      - run:
          name: Save Docker image
          command: docker save -o image.tar $DOCKER_USER/$IMAGE_NAME:$CIRCLE_BRANCH

      # Permanently store the built image to test and potentially deploy it.
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  test_and_deploy:
    executor: docker-publisher
    working_directory: ~/repo
    steps:

      # Attach workflow workspace to retrieve saved image.
      - attach_workspace:
          at: /tmp/workspace

      - setup_remote_docker

      # Retrieve built and stored image.
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar

      # Test images.
      - run:
          name: Test images
          command: |
            docker run -d $DOCKER_USER/$IMAGE_NAME:$CIRCLE_BRANCH
            docker ps | grep $CIRCLE_BRANCH

      # Push image.
      - run:
          name: Push image
          command: |
            echo $DOCKER_PASS | docker login \
              --username $DOCKER_USER --password-stdin
            docker push $DOCKER_USER/$IMAGE_NAME
